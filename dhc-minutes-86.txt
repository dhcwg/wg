             Dynamic Host Configuration Working Group
         IETF 86 Meeting Minutes (DRAFT - March 28, 2013)

Note: These minutes were written after the meeting based on audio logs and
notes. Please excuse any inaccuracies. For a less detailed summary, see
http://trac.tools.ietf.org/area/int/trac/wiki/IETF86.

Agenda bashing: Ole Troan requested moving his presentation up to other
presentations about DHCPv4-over-IPv6 and chairs did that.

Chairs update:
Ted Lemon stepped down as DHC chair and is taking over as Internet Area
Director. John Brzozowski stepped down as DHC chair and is taking over
as v6ops WG co-chair.

New co-chairs:
Bernie Volz
Tomek Mrugalski

Ralph Droms (stepping down Internet AD) thanked both old chairs for a long,
effective service and welcomed new chairs.

New RFCs published:
- RFC6853 "DHCPv6 Redundancy Considerations"
- RFC6842 "Client Identifier Option in DHCP Server Replies"

Drafts in IESG:
- draft-ietf-dhc-dhcpv4-bulk-leasequery (waiting for ref)
- draft-ietf-dhc-relay-id-suboption (approved)
- draft-ietf-dhc-secure-dhcpv6 (4 discusses, IPR disclosed)
- draft-ietf-dhc-dhcpv6-client-link-layer-addr-opt (approved)

WG drafts:
- draft-ietf-dhc-failover-requirements-02 (passed wglc)
- draft-ietf-dhc-dhcpv6-radius-opt-09 (passed wglc)
- draft-ietf-dhc-triggered-reconfigure-03 (passed wglc)
- draft-ietf-dhc-dhcpv6-load-balancing-00 (passed wglc)
- draft-lemon-dhc-dns-pd-01 (adopted, will republish as wg item)
- draft-ietf-dhc-dhcpv6-tunnel-01 (expired, on agenda)
- draft-ietf-dhc-dhcpv6-failover-design-02 (reviews needed)
- draft-ietf-dhc-option-guidelines-10 (minor update, then wglc)
- draft-ietf-dhc-addr-registration-02 (on agenda)
- draft-ietf-dhc-container-opt-06

- draft-ietf-dhc-dhcpv4-over-ipv6-05 (on agenda)

- draft-ietf-dhc-dhcpv6-solmaxrt-update-00 (needs update, then wglc?)
- draft-ietf-dhc-dhcpv6-stateful-issues-03 (wglc comments, update needed)
- draft-ietf-dhc-dhcpv6-prefix-pool-opt-02 (wglc requested, chairs will announce)
- draft-ietf-dhc-host-gen-id-05 & draft-ietf-dhc-cga-config-dhcpv6-04
  authors asked if there is still interest in this work? No comments from WG,
  will take to the list, but likely drop.

Potential WG items:
- draft-bhandari-dhc-class-based-prefix-04 (author would like WG to adopt,
  on agenda)

- draft-rajtar-dhc-v4configuration-01 (updated, based on WG comments, on agenda)
- draft-mrugalski-softwire-dhcpv4-over-v6-option-01 (companion document for
  draft-ietf-dhc-dhcpv4-over-ipv6-05, adopt or drop depending on discussion)

There is a joint DHC/sunset4 session planned in Berlin to discuss issues that
overlap Sunset4 and DHC. (Sunset4 and DHC will have separate sessions as well.)

IPR Disclosure
by Ted Lemon

Ted: Important procedural thing to be aware of. Announcing that there was a late
IPR disclosure. In 2008 first secure-dhcpv6 draft was published. In 2010 there
was a patent filed. The IPR was disclosed in 2013 after WGLC. That is not OK
according to BCP79. IETF participants are required to required to disclose IPR
as soon as they are aware of any IP claims. The section chosen is a formal
notification sent to the list.

DHCP Directorate
by Ted Lemon

Ted: The issue is that DHC is an attractive place for people defining options
that have really nothing to do with DHCP. This often forces the WG to take up
the work that is not really DHCP. The proposal is to take it off the charter.
The DHC will no longer produce DHCP options. The work would be done in the
respective WGs. For example DHCP option for PCP is done in PCP WG. DHC is going
to do only protocol extensions. We're going to form DHCP Directorate - a
collection of experts that will help AD, mostly by doing review for DHCP related
work in other WGs. Architectural questions remain in DHC (option guidelines,
leasequery, failover, DHCPv4-over-IPv6 etc.). Chairs will propose DHCP
Directorate charter. Ted will be responsible for nominating members of DHCP
Directorate.

Bernie Volz: Maybe call it DHCP Options Directorate?
Ted: No, it may be for other things, not just options.
Kim Kinnear: Directorate not a bad idea in general, but there will be an overlap
between WG and directorate.
Ted: One of the major reasons for having WG is to form a consensus. Directorate
is more about technical review than consensus.
Kim: Would you expect more than one person to do review?
Ted: There may be couple people requested to do review.
Kim: My concern is that if we decide to solve a problem and the problem is not
protocol specific, what do we do?
Ted: Give me an example?
Kim: I don't have one right now. New suboption for option 82 for example.
Ted: If there is no WG that is appropriate and there's a genuine need for it,
we have liason statement from cablelabs or something like that.
Kim: What if we 12 people decide in this room that we need an option?
Ted: Good question. If there's 12 people interested, there are 2 options. The
first one is to create new charter, the second is to form a new WG. Another
way is to go to your AD and do individual submission and go straight to IESG.
Kim: In that case I object. I think this is a bad idea.
Bernie: We'll take it to the list.
Sheng Jiang: There is another scenario in IETF - do gap analysis or requirements
document. What if DHC gets a requirements document from some other WG. Would it
be ok to do this work in DHC?
Ted: No. This is an attractive nuisance. The whole point is to remove that
attractive nuisance.
Sheng: In the ops group expresses a need for an option to handle some
operational scenario, where should the work go?
Ted: That's a good point. I don't have an answer for that right now. I probably
need to discuss this with Ralph Droms. If it were completely up to me, I'd say
wait for a case like that and then decide, but I hear you. This is a legitimate
concern. Let me think about that.

Obtaining IPv4 Parameters in IPv6 Networks
by Ted Lemon
http://tools.ietf.org/html/draft-rajtar-dhc-v4configuration-01
http://tools.ietf.org/html/draft-ietf-dhc-dhcpv4-over-ipv6-05
http://tools.ietf.org/html/draft-sun-dhc-dhcpv6-opt-v4config-00

Bernie: We'd like to take up only couple clarifying questions, Ian will present
next on similar topic and Ole will do his. After that we'll have a broader
discussion later.

Suresh Krishnan: It is difficult to foresee how many options will be needed in
the next 10 or 20 years.

Rajiv: I just wanted to clarify that MAP-E was presented. It is not just the
part of PD used to derive IPv4 address, but also IPv4 prefix is provisioned.

draft-rajtar-dhc-v4configuration
presented by Ian Farrer
http://tools.ietf.org/html/draft-rajtar-dhc-v4configuration-01
http://tools.ietf.org/agenda/86/slides/slides-86-dhc-4.pptx

Ian presented 3 different approaches discussed in the draft: DHCPv4-over-IPv6,
DHCPv6 and hybrid approach (DHCPv6 to get IPv4 address and then request any
other IPv4 options using DHCPINFORM over softwire tunnel).

DHCPv6 through Tunels
presented by Ole Troan
draft-ietf-dhc-dhcpv6-tunnel

This is opposite of the previously discussed options. DHCPv6 client working
over IPv4 networks. The problem is to run DHCPv6 client on interface that does
not have link-local interface and doesn't support multicast. Possible solutions
are: a) integrate relay with client b) allow client-server communication using
global address (with solving the problem of how the client can learn server
address).

Ted: We had discussion on mailing list: do we colocate relay with client or
"break the protocol" and allow unicast? 
Tomek: Is it solicit or information-request only?
Ted: good point. inf-request only. The point in not allowing clients unicast
packets to server to break down every client that attempts to do it.
Bernie: Agree.
Ted: I'm tempted to suggest: have the client just send relay-forw message.
Ralph Droms: Didn't we go though this before for some other technology?
(unaudible): NEMO!
Francis Dupont: There's RFC6276, which exactly solves the same problem for
mobile router. The solution was to colocate relay with the client.
Ole: So we can kill this document.
Bernie: That's brillant. Thanks, Ralph!
(laughs)

Discussion regarding DHCPv4 over IPv6 networks
Ted: My expectation and hope about this is that we find a nuanced solution, not
a sledgehammer.
Kim Kinnear: Are we trying to pick one of the solution or some variant of
thereof?
Ted: We are not trying to pick one of 3 choices. I think the solution to the
problem is to do just information request. BTW the ideal environment for this
is that you don't have any IPv4 services left. If your provider has IPv6 only
network, you are not supposed to need any information about IPv4 services.
We're configuring CPE here. CPE can provide DNS over IPv4 to end hosts, but
talk IPv6 upstream.
Ian: We did a lot of work in Softwires to find provisioning methods and the
way it is constructed now is to use a single container. If we chose to break
that down, it will put us back a long way.
Ted: We talked about only stateless here. When talking about unified cpe case
is one of:
a) you get just this and this will be enough or b) you're doing stateful, so
you need stateful IPv4 allocation. There's no one solution that meets all
needs. First is the timing. Hopefully, as we further into the future, the
need for IPv4 addresses will decline. CPE devices have to use PD. That part
is not optional. What you don't get is a dynamically allocated address. And
if you need to configure additional IPv4 parameters, that comes for free here
with DHCPv4 server.
Ian: In the latest experiments we found that having dynamic allocation is a
nice thing to have.
Rajiv: It may be a DNS proxy. Perhaps we could have a flag that says if we
want to do dynamic allocation?
Kim: There's the draft that Ian proposed with 3 cases. Do you want to pick
one of those 3 cases?
Ted: No. Ian is just innocent bystander. He wrote the draft as a favor for
me. This is not just about unified CPE. This is something that is happening
in Softwires, so it motivates us, but it is not the only reason. 
Kim: One of the options discussed was porting v4 options to v6, one by one.
This is clearly a non-starter.
Ted: So it's either approach 1 or 3. The third option is a tunnel. I think
tunnel is a wrong thing to do. Tunnel do not support all the things that are
needed. And unnumbered tunnels are not really tunnels.
Kim: so it's mostly the first solution.
Ted: We had couple discussions. First is to when you have initial DHCPv6
configuration, you may also get an IPv6 address of the DHCPv4 server, and
then you do something DHCPv4-like to DHCPv4 server over IPv6. The other
thing that you could do, which actually has some attractive positive
quality, is that you can define a new DHCPv4 relay message option in DHCPv6
and the client multicasts DHCPv6 message with DHCPv4 message in it to all v6
servers and v6 relays. It will also likely reach the same server as regular
DHCPv6 packets would do.
Kim: I haven't been following all the drafts in that area recently. Is there
a draft that explains that?
Ted: No. We came up with the draft recenly brainstorming. Does anybody think
this is a bad idea?
Ole: can you state is again, please?
Ted: What we are proposing here is we have either relay-forw message (maybe
relay-forw4 message) that has relay-msg4 option inside it, following the
same structure as relayed DHCPv6. The big picture is that you essentially
have one infrastructure that's delivering both DHCPv4 and DHCPv6 messages
that arrive at the same destination point. At the end you decide to have
either one server or two.
Rajiv: The downside is that you have modify a relay.
Ted: Only the PE relay.
Bernie: And you need to change the server. There's a question about if we want
to use existing message type of something new.
Ted: Speaking of which, do we have a volunteer to write a draft?
[Tomek volnteering].
Ted: You're the chair...
Tomek: Am I still allowed to write drafts?
(laughs)
Rajiv: Are we still requiring server modification?
Ted: yes, but it is very localized.
Bernie: Let's take this to the list. We should write something short that
explains the basic concepts. Is there anyone that would like to write a draft?
Ian: we have different solutions draft? Would it make sense to have short
description there?
Ted: No. It needs to be completed and document what we have agreed here. It
will refer to the solution.
Ian: That's a work item that is blocking several other Softwire works. We
don't need it published as RFC, we just need a decision.
Ole: I think is a grand idea for now, but I reserve my right to change my
mind tomorrow. Would it be easier to deploy if you colocate DHCPv4 and
DHCPv6 servers?
Ted: Like Cisco and Nominum do?
Suresh Krishnan: The other solutions have something written down. We're
talking about very fuzzy things. I volunteer to work on this.
Marcin Siodelski: I think it is a good idea to document that, so I volunteer
to do the job.
Ted: Alright! Does anyone want to work with him?
Bernie: I'll work with him, also Tomek will help.


A Generic IPv6 Addresses Registration Solution Using DHCPv6
Suresh Krishnan

This draft was around for a while. It was presented before. Chairs told us
to go to v6ops and we got beaten up a bit. There used to be 2 senarios
supported for registering a host: by a router and by the host itself. The
host registration is now deemphasized. The host registration is considered
a DOS vector.
Dave Thaler: In enterprise environment SLAAC is mandatory and DHCPv6 is
optional. This makes a problem when hosts have A record, but not AAAA
record. I'd like to work with you offline to see if the host scenario issues
can be solved and if they also apply to router host. I think it is very
important to solve this.
Ole: Dave, are you happy that there's no guarantee that you'll register all
the addresses?
Dave: In fact, I specifically do not want all the host addresses to be
registered. In the DNS case, in particular my privacy addresses.
Bernie: Dave is talking about the previous version. Are we doing both or
just the router?
Dave: there are two separate problems here. First is being able to put the
stuff in the DNS. Another is that I may want to  register in some inventory
database. They are very different. The router side cannot solve this,
because the router cannot distinguish between privacy address and
non-privacy address.
Erik Nordmark: I read the draft and it has ND option "hosts, please send me
your registration addresses". It would be useful to have, but if there are
multiple reasons. If we want to put it in the DNS, we'll need to know the
hostname for that. The other may be router doing DAD proxy for me, so the
host doesn't have to up all the time.
Suresh: Question for you, Erik. In the 6lowpan, is the RIO option sent
every time?
Erik: It is sent whenever you want.
Ted: You can do lease query to get that data. Bulk leasequery in particular.

Tracking of Static/Autoconfigured IPv6 addresses
draft-asati-dhc-ipv6-autoconfig-address-tracking
http://tools.ietf.org/html/draft-asati-dhc-ipv6-autoconfig-address-tracking-00
http://www.ietf.org/proceedings/86/slides/slides-86-dhc-6.pptx
Rajiv Asati

There are many networks that require logging that information on who is
using what IPv6 address. The changes are mostly in the first hop router.
There's a new option for this.
Dave: My comment apply this to both drafts. I don't understand why are we
using DHCP?
Rajiv: There's good reason. For most networks operators rely on DHCPv6
protocol to provide that information anyway.
Bernie: There are networks that do both SLAAC and DHCPv6, because some
clients don't support DHCPv6. 
Sheng Jiang: A bit of history. There was a draft in 6man in 2010. 6man
decided that DHCP is the right place if you want to do registration if you
want to registration.
Tim Chown: This is kind of ok. We have sort of smallish network with 5000
switch ports. We just poll those devices to get those IP:MAC information.
That doesn't deal with DNS. The other thing is that for a typical
workstation you'll never see its autoconf address in that database.
Paul Ebersman: There's also a link layer address option that is in IESG now.
Ted: We'll need to check out the ipfix thing Dave mentioned.

Bernie: I think what the conclusion is that doing ND or using Neighbor
Discovery cache by router or switch to notify some entity of any changes/
additions/whatever is something worthwile to do. But it doesn't really mean
that is has to be done over DHCP protocol.
Suresh: So the two solutions suggested by Dave are ipfix and syslog.
Rajiv: Just to clarify. syslog has been used in many, many networks and
somehow failed. The way processes are set up in many networks is to look up
in DHCP for this information. When the information is sent to somewhere
else, a lot needs to change. What we learned in the last year or so, that
really doesn't help with IPv6 rollout.
Bernie: We should end this discussion and simply say: we aren't accepting
any drafts on this at this time. If you want to work on this and provide
updated draft, maybe you can go back in a while and do it again, but it may
be more appropriate in some other WGs.
Suresh: I think it's like go ask somebody in ops area ADs.
Lorenzo Colitti: Been there, done that. We went to v6ops. The level of
interest was bimodal. They were poeple saying "you're not using dhcpv6 to
assign addresses already? Hosts can have more than one address?" which
others were saying "yeah, of course. Hosts use SLAAC and we scrape the
routers. Both solutions are done. One is suboptimal in a sense that it
doesn't allow you to have you more than one address per host in an easy way.
The other one is suboptimal in the sense that you need to keep kicking the
routers and scrape the cli to get that information. Putting this into the
DHCP is more of an informational push, but it does fit nicely into
operational models.
Ted: Lorenzo, do the ops people say that scraping is bad, but there is no
energy to do something else or do they want us to do something?
Lorenzo: Both of the solutions suck. And there were people who were saying
that we need to know who was using IP:MAC address as specific point in time.
The come up with a conclusion that you have to use DHCP. That's not true.
There are other ways so if cops come around, you can say here's the MAC
address, go find this guy. DHCP seems convenient, because people have built
systems that's tightly integrated with DHCP. It's not so much of the
assignment, but the tracking. If there's a strong consensus that it doesn't
belong here, we can go somewhere else.
Ted: In the ideal world, some ops wg would say we thought about that
problem and think DHCP is the right way to solve this problem. Can you guys
build the solution for us? That's what I'd like to see. What I'm hearing
from Lorenzo is that we probably won't get that feedback.
Sheng Jiang: What you said before is meaning that DHC WG can't do. Earlier
you said that DHC WG can't create new DHCP options.
Ted: This is not a new DHCP option, this is a protocol extension.
Suresh: I'd like to propose something. Bunch of us go to guys in ops area
and if they tell us the DHCP is the way to do it, then we do it here,
right? But we split the problems from each other.
Bernie: Right. Splitting DNS and registration piece for logging is split
in separate.
Paul Ebersman: For people who do address assignment, I'm ok with it. I'm
uncomfortable for people who do just the registration to do DHCP.

DHCPv6 class based prefix
draft-bhandari-dhc-class-based-prefix
presented by Sri Gundavelli
http://tools.ietf.org/html/draft-bhandari-dhc-class-based-prefix-04
http://tools.ietf.org/agenda/86/slides/slides-86-dhc-2.pdf

Sri: What's the problem? Currently we're delivering an address or a prefix,
but we do not deliver any metadata. The host has no clue what the prefixes
mean. Those prefixes can have multiple properties. For example a mobile
properties. How do we convey that to the host? One use case is 3GPP
architecture. When mobile node visits a network, it could potentially get 2
prefixes. One prefix for using visiting network and the other one for
accessing services in my home network. We could solve the problem using NAT,
but we're mssing is that the addresses do not reflect the properties. This
is the fundamental issue. We're proposing 2 things. The first one is a
prefix property, which is 16bit flag, representing this is my home address,
this address has no internet access, this is my local address etc. Some
global properties that IANA can register and manage. The second option is a
prefix class for localized service. It is localized in scope.
Bernie: I can understand the IANA registered part. But for the localized
list - how do you know what those bits mean in this network? And when you
move to a different network?
Alex Petrescu: I have not read the draft, but I wondered what are the
examples of the properties. Some of the properties you mentioned are
already there. For example ULA can be detected from first bits.
Mark Townsley: For example, if it's a prefix that it's bound to mobility
system, so if you need session survavilitiy, you may use this.
Kim Kinnear: 2 issues. One is 16 bits. I hate to be stuck in 16 bits. It
should be variable length and wil grow one people find new uses for extra
bits. The other one is the class. I remain uncomfortable how you specify all
classes. I'd hope there's some way to use class option and to specify all
classes and not use the ORO.
Bernie: Cutting the line.
Ian Farrer: Duestche Telecom. We're interested in this work. We want to push
multiple prefixes to  customers for different services. One would be best
effort, the other is for video etc. But then you have source address
selection problem. For that reason I like that solution.
Sheng Jiang: 3 comments: First of all I think the (inaudible) is really
good. Second, I agree with Bernie, most of the meanings are mostly local.
Moving from one network to another the semantics will change. Third, how
good the solution is based on how good the properties are. For example:
one of the bits is that the network is charged. That is not enough. I have
two networks, one cheap and one very expensive.
Mark Townsley: This piece of the solution it's incredible what the hosts
are doing today to find out if they're connected to the Internet. My iPhone
that tries to eliminate all the options to the use actually has switches
"use 3G for facebook yes/no". Applications want to know more about the
network. Right now they need to find it out on their own by pinging
different hosts. We want the network to tell the hosts more information.
That's the property. The other is the local property. Applications can
either use it or ignore it. The reason it is in DHCP is that we don't have
to get it from layer 2 interface.

Issues with Multiple Provisioning Domains
Ted Lemon
This is very much related to what Mark was talking about. The problem we
have is first of all, what's provisioning domain? It is single collection
of configuration information. It includes addresses and routing
information, resolver address etc all of which came to you from a single
provider. I'm sure everyone experienced a case when you're walking on a
street and enjoy 3G or LTE connection. When you enter range of local wifi
with captive portal, your connection suddenly dies, because you're in wifi
range. You don't have a connectivity, because there's a captive portal.
Another example: you have LTE and wifi. LTE is faster than wifi, but it 
has bandwidth caps. Yet another example: during IETF meeting in
Maastricht, there was a very fast hotel network that allowed you to do
web, but you couldn't do anything (check mail or ssh anything). Captive
portal sometimes send you something to fool you that you have connection,
but you really don't. You can't say I'm gonna to use this or that
interface for now. Sometimes no single prefix in your network will
solve all your problems. This is also not a happy eyeball problem. For
example in the corporate VPN case, you're leaking to the whole world the
information that you're talking to your machines inside your network.
Wes George: Wearing my sunset4 chair hat, some provider network may have
v6 only, v6-transition, v4 with NAT, NAT64 or some combination of the
above and it may be useful for the provider and the host to communicate
what's available. If something needs an ALG and it won't work, because
there's not ALG in the network.
Sheng Jiang: We have this problem already. There's not enough information
provided from the network to the hosts. Is it possible to define some
flexible way to define it. We have XML language for netconf, maybe we
could use it?
Ted: The problem with XML is that it is heavyweight and putting it into RA 
would be difficult.
Lorenzo Colitti: What are the information missing here that you can't be
solved with full metrix of src/dst prefix information and preference?
Ted: If I had an infinite wisdom want...
Mark Townsley: The google guy says "give us infinite information".
(laughs)
Lorenzo Colitti: If you had infinite information, but you could represent
it only as source/dst prefix and preference? The other is if you get some
information from 2 networks, how do you compare them?
Ted: I'll give you an answer, which I don't claim to be the correct one,
but it will give you and idea what the correct answer might be. If you
have some sort of trust relationship with one source of information, you
may be able to make use it.
Rajiv: If network A tells me that is there's a better bandwidth, and
network B telling me this is more expensive, I don't have apple to apple
comparison anymore. What should I do - ask the user to decide?
Ted: We're trying to design an architecture that will avoid asking user
a lot of stupid questions.
Lorenzo: The problem with fixed number of bits is that you soon get the
complixity that cannot be described with them, like TOS in IPv4. The only
case where it is still useful is inside your own network. Instead of
having one global registry, you'd have per-AS registry.
Ted: I'd like to interject here. We're talking about not the DHCP part
of the part of the problem. That's the kind of conversation I'd like to
have tomorrow in MIF.
Bernie: And we're out of time. Thank you, folks, and see you on the
mailing list and in Berlin.
